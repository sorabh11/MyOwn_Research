{
  "name": "Handsfree 2.0",
  "nodes": [
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "binaryPropertyName": "=data",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        780,
        -320
      ],
      "id": "5aaabeb9-6742-4523-81a6-b9cc33c84852",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "tZwI274oKhBlrCZu",
          "name": "OpenAi account 4"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Sales Visit Audio:{{ $json.translatedText }} "
            },
            {
              "content": "**Prompt:**\n* You are an expert data entry operator who analyses input text carefully and then puts them in the right field grounded in the information \n* Please see the transcription of the following sales-visit audio carefully and extract only these details:\n\n* **Retailer Name**\n* **Retailer Contact Person**\n* **Retailer Feedback**\n* **Competitor Feedback**\n* **Date&TimeStamp**\n\n\n**Field Descriptions:**\n\n* **Date&TimeStamp:** Date and timestamp of the time when the audio was submitted for extraction in IST (UTC+05:30) format\n* **Retailer Name:** Name of the store or retail outlet\n* **Retailer Contact Person:** Name of the person the sales rep interacted with\n* **Retailer Feedback:** Retailer’s comments or suggestions on products or service\n* **Competitor Feedback:**Comments or suggestions on Competitor's products or service or activities \n\n**Guidelines:**\n\n* Keep the results grounded in the input message only.\n* Label each field exactly as shown above.\n* Use clear, concise sentences or short bullet points.\n* Keep your entire response under 1500 characters.\n* In case any input is not received, please keep the field empty\n\n**Example Output:**\n\n```\nDate&TimeStamp: 27 May-25 1:04PM\nRetailer Name: Sharma General Store  \nRetailer Contact Person: Rajesh Sharma  \nRetailer Feedback: Customers requesting smaller pack size\nCompetitor Feedback: Competitor giving steep discounts which are leading to loss of sales for key SKU's  \n```\n\n**IMPORTANT**\n* Keep the results grounded in the input message only. * Please don't include any detail from outside the text message received"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "temperature": 1,
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1220,
        -320
      ],
      "id": "5b697bcc-9de2-4ef3-8051-6179289daf8c",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "tZwI274oKhBlrCZu",
          "name": "OpenAi account 4"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -240,
        -420
      ],
      "id": "91c33bb5-5359-42ce-87d5-a25f02186d31",
      "name": "Telegram Trigger",
      "webhookId": "72a2fc3c-03fb-41f6-b7ba-e5c31ac87346",
      "credentials": {
        "telegramApi": {
          "id": "jezSBUM7hVFHtPU7",
          "name": "SalesBuddy"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        560,
        -320
      ],
      "id": "92fcf2cb-0fc2-41e9-a576-301c6cbaba9c",
      "name": "Telegram",
      "webhookId": "1f2d1b48-9af0-4bda-8052-7c570302b1fd",
      "credentials": {
        "telegramApi": {
          "id": "jezSBUM7hVFHtPU7",
          "name": "SalesBuddy"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "353875d0-84f4-40e0-801f-27b46d1d7fc3",
              "leftValue": "={{ $json.message.voice }}",
              "rightValue": "={{ $json.message.voice }}",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        280,
        -320
      ],
      "id": "3bde47e4-92e5-4aa1-9e4e-32a8c0dc7893",
      "name": "Filter"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "a5348d61-1e0f-4d8c-ac85-74b12d5662f0",
              "leftValue": "={{ $json.message.text }}",
              "rightValue": "={{ $json.message.text }}",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -20,
        -420
      ],
      "id": "7beae496-d892-4558-9bf4-48317f2c8d4e",
      "name": "If"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Sales Visit Text:  {{ $json.message.text }}"
            },
            {
              "content": "=**Prompt:**\n* You are an expert data entry operator who analyses input text carefully and then puts them in the right field grounded in the information \n* Please see the text from the sales personnel from their sales visit carefully and extract only these details:\n\n* **Retailer Name**\n* **Retailer Contact Person**\n* **Retailer Feedback**\n* **Date&TimeStamp**\n\n**Field Descriptions:**\n\n* **Date&TimeStamp:** Date and timestamp of the time when the audio was submitted for extraction in IST (UTC+05:30) format\n* **Retailer Name:** Name of the store or retail outlet\n* **Retailer Contact Person:** Name of the person the sales rep interacted with\n* **Retailer Feedback:** Retailer’s comments or suggestions on products or service\n\n**Guidelines:**\n\n* Keep the results grounded in the input message only.\n* Label each field exactly as shown above.\n* Use clear, concise sentences or short bullet points.\n* Keep your entire response under 1500 characters.\n\n**Example Output:**\n\n```\nDate&TimeStamp: 27 May-25 1:04PM\nRetailer Name: Sharma General Store  \nRetailer Contact Person: Rajesh Sharma  \nRetailer Feedback: Customers requesting smaller pack size  \n```\n\n**IMPORTANT**\n* Keep the results grounded in the input message only. * Please don't include any detail from outside the text message received"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        200,
        -520
      ],
      "id": "e9c703a8-be57-49c2-94b5-d9f0b84016ef",
      "name": "OpenAI2",
      "credentials": {
        "openAiApi": {
          "id": "tZwI274oKhBlrCZu",
          "name": "OpenAi account 4"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "18fgBU6ef4ZMFU4e3JG1pO9XwdEN4lRBolKLe6HkW7AE",
          "mode": "list",
          "cachedResultName": "SalesBuddy_test 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18fgBU6ef4ZMFU4e3JG1pO9XwdEN4lRBolKLe6HkW7AE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18fgBU6ef4ZMFU4e3JG1pO9XwdEN4lRBolKLe6HkW7AE/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Retailer Name": "={{ $json.message.content['Retailer Name'] }}",
            "Retailer Contact Person ": "={{ $json.message.content['Retailer Contact Person'] }}",
            "Retailer Feedback": "={{ $json.message.content['Retailer Feedback'] }}",
            "Date&Timestamp": "={{ $json.message.content['Date&TimeStamp'] }}"
          },
          "matchingColumns": [
            "Retailer Name"
          ],
          "schema": [
            {
              "id": "Date&Timestamp",
              "displayName": "Date&Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Retailer Name",
              "displayName": "Retailer Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Retailer Contact Person ",
              "displayName": "Retailer Contact Person ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Retailer Feedback",
              "displayName": "Retailer Feedback",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        780,
        -520
      ],
      "id": "e82cf393-3a3b-4049-a76b-f8ca3d5af71b",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "j0oORrH64zoTRWWU",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "content": "## TO DO\n1. in ai parser - add context of missing fields \n\ncomplete check o\n\nAdd extraction \n2. check accuracy in different languages\n3. Ask questions back to Telegram for those that have not been answered\n4. Add Widgets",
        "height": 220,
        "width": 280
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3320,
        -780
      ],
      "id": "2a959ec1-3df4-4b9d-a8e2-8a974e11cf88",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "text": "={{ $json.text }}",
        "translateTo": "en"
      },
      "type": "n8n-nodes-base.googleTranslate",
      "typeVersion": 2,
      "position": [
        1000,
        -320
      ],
      "id": "feda1a42-a5c9-4434-a271-119103d9cbb0",
      "name": "Translate a language",
      "credentials": {
        "googleTranslateOAuth2Api": {
          "id": "7426DaSR5B3v5Ayz",
          "name": "Google Translate account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Sales Visit Text: {{ $json.message.content }}"
            },
            {
              "content": "=**Prompt:**\nYou are an expert data entry operator. Carefully analyze the input JSON object, and follow these steps:\n\n🔎 **Step 1 – Identify Empty Fields:**\n\n* For each of the following fields, check if its value is an **empty string (\"\")** or missing:\n\n  * Date\\&TimeStamp\n  * Retailer Name\n  * Retailer Contact Person\n  * Retailer Feedback\n* Collect all empty fields in a list.\n* Output a string listing the empty fields in the format:\n\n  * If one field is empty: `\"<field name> is empty\"`\n  * If multiple fields are empty: `\"<field1>, <field2>, and <field3> are empty\"`\n\n📝 **Step 2 – Ask for Missing Information:**\n\n* If only one field is empty, output a polite string:\n\n  * `\"Could you please share the <field name>?\"`\n* If multiple fields are empty, output a polite string:\n\n  * `\"Could you please share the <field1>, <field2>, and <field3>?\"`\n\n**Example Input:**\n\n```json\n{\n  \"Date&TimeStamp\": \"11-06-25 07:06\",\n  \"Retailer Name\": \"\",\n  \"Retailer Contact Person\": \"Rajesh\",\n  \"Retailer Feedback\": \"Rajesh has a problem with the scheme\",\n  \"Competitor Feedback\": \"There is a lot of activity from the competitor brand\"\n}\n```\n\n**Example Output:**\n\n```\n1. Retailer Name is empty  \n2. Could you please share the Retailer Name?\n```\n\n**Important:**\n✅ Only mark a field as empty if its value is an empty string (\"\").\n✅ Do not output any field that has a non-empty value.\n✅ Ignore any extra fields not listed above.\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -240,
        200
      ],
      "id": "816f29a1-783a-41c8-ac43-160daaf30a85",
      "name": "OpenAI4",
      "credentials": {
        "openAiApi": {
          "id": "tZwI274oKhBlrCZu",
          "name": "OpenAi account 4"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// For single item processing (most common in n8n)\nconst salesData = $('Voice_TimeStamp').item.json.message.content;\n\n// Required fields to check\nconst requiredFields = [\n    \"Retailer Name\",\n    \"Retailer Contact Person\", \n    \"Retailer Feedback\", \n    \"Competitor Feedback\"\n];\n\n// Find missing fields\nconst missingFields = [];\nrequiredFields.forEach(field => {\n    const value = salesData[field];\n    if (!value || value.toString().trim() === \"\") {\n        missingFields.push(field);\n    }\n});\n\n// Create request message\nlet requestMessage;\nif (missingFields.length === 0) {\n    requestMessage = \"All fields are complete!\";\n} else if (missingFields.length === 1) {\n    requestMessage = `Could you please provide the ${missingFields[0]}?`;\n} else {\n    const allButLast = missingFields.slice(0, -1).join(\", \");\n    const lastField = missingFields[missingFields.length - 1];\n    requestMessage = `Could you please provide the ${allButLast} and ${lastField}?`;\n}\n\n// Create unique key\nconst dateTime = salesData[\"Date&TimeStamp\"] ;\n// const retailer = salesData[\"Retailer Name\"] || \"unknown\"; \nconst uniqueKey = DateTime ; \n  //`${dateTime}_${retailer}`;\n\n// Return the result\nreturn {\n    ...salesData,\n    missing_fields: missingFields,\n    request: requestMessage,\n    has_missing: missingFields.length > 0,\n    unique_key: uniqueKey\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        -320
      ],
      "id": "60d7b364-1dcc-4a78-8c2e-62d407beab2c",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "chatId": "={{ $('Telegram Trigger').item.json.message.from.id }}",
        "message": "={{ $json.request }}",
        "responseType": "freeText",
        "options": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2460,
        -320
      ],
      "id": "5be9351c-5abf-4d34-b2dc-4ae4110d6d5c",
      "name": "Send message and wait for response",
      "webhookId": "2e5ba9ff-ab9c-451e-aab9-9dd1c03ddb88",
      "credentials": {
        "telegramApi": {
          "id": "eBd2kKuQ331m8lGg",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Input of the empty field:{{ $json.data.text }}"
            },
            {
              "content": "=# Role \n1. You are an expert data entry operator who analyzes input text carefully and accurately maps the information into the correct structured fields. \n2. Do **not make any assumptions** or generate content that is not explicitly present in the input.\n\n## Instructions\nPlease review the input message from the sales representative and extract only the clearly mentioned details into the following fields:\n\n* `Retailer Name`\n* `Retailer Contact Person`\n* `Retailer Feedback`\n* `Competitor Feedback`\n\n---\n\n## Field Descriptions:\n\n* `Retailer Name` Name of the store or retail outlet.\n* `Retailer Contact Person` Name of the person the sales rep interacted with.\n* `Retailer Feedback` Retailer’s comments or suggestions on products or service.\n* `Competitor Feedback` Comments or suggestions on competitor’s products, service, or activities.\n\n\n## Get Missing fields \n* Missing fields are available in json {{ $('Code1').item.json.missing_fields }}\n* Please map the **input received** to the **missing fields only**\n* Incase of ambigous input, use your intelligence to always map each missing field with the input text \n\n\n\n\n---\n\n## Guidelines:\n✅ Only include fields that are explicitly and clearly mentioned in the input.\n✅ If a field is **not present, not clearly identifiable**, or **ambiguous**, **do not include it** in the output.\n✅ Always **label each field** exactly as shown above.\n✅ Keep the results **100% grounded in the input text only** — no assumptions, guesses, or completions.\n✅ Incase of ambigous input, use your intelligence to always **label each field** exactly as shown above.\n\n\n---\n\n## Example Input and Output:\n\n\n**Example Input:**\n```\nSharma General Store and Rajesh\n```\n\n**Example Output:**\n\n```\nRetailer Name: Sharma General Store \nRetailer Contact Person: Rajesh \n```\n\n---\n\n**Example Input (Minimal):**\n\n```\nSharma General Store\n```\n\n**Example Output:**\n\n```\nRetailer Name: Sharma General Store  \n```\n\n**Example Input:**\n\"Got feedback from Mahesh that Market is offering 5% more margin\"\n\n**Example Output:**\nRetailer Contact Person: Mahesh\nCompetitor Feedback: Market is offering 5% more margin\n\n---\n\n**Example Input:**\n`Missing fields`: Retailer Contact Person and Competitor feedback\n`input text`:\"Met with Raj who says other shops giving better schemes\"\n\n**Example Output:**\nRetailer Contact Person: Raj\nCompetitor Feedback: other shops giving better schemes\n\n**Example Input:**\n`Missing fields`: Retailer feedback\n`input text`: \"Retailer says product moving slow and wants better margins\"\n\n**Example Output:**\nRetailer Feedback: product moving slow and wants better margins\n\n---\n\n**Example Input:**\n\"Raj mentioned stock quality is good but pricing high\"\n\n**Example Output:**\nRetailer Contact Person: Raj\nRetailer Feedback: stock quality is good but pricing high\n\n## Field Descriptions:\n// ...existing code...\n\n### Pattern Recognition:\n* `Retailer Contact Person`: Look for:\n  - Names mentioned after \"from\", \"by\", \"with\"\n  - Names at the end of sentences\n  - Single names without business context\n  \n* `Competitor Feedback`: Look for:\n  - Mentions of \"market\", \"competition\", \"others\"\n  - Comparative statements\n  - References to other brands/stores\n  - Pricing or scheme comparisons\n\n* `Retailer Feedback`: Look for:\n  - Direct quotes or statements from the retailer\n  - Comments about:\n    - Product performance\n    - Sales volumes\n    - Customer responses\n    - Pricing feedback\n    - Scheme effectiveness\n  - Phrases starting with:\n    - \"says\", \"mentioned\", \"complained\"\n    - \"wants\", \"needs\", \"requires\"\n    - \"suggested\", \"requested\"\n  - Quality or service-related comments\n\n\n---\n\n**IMPORTANT:**\n❗ Never infer or fabricate information.\n❗ Do not include any field in the output unless it is **explicitly present** in the input text.\n❗ Keep the format consistent and clean: `Field Name: Value`.\n❗ Please map the **input received** to the **missing fields only**\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {
          "temperature": 1,
          "topP": 1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        2680,
        -320
      ],
      "id": "6d71b028-5b1d-40a5-a5d7-3d23c469c00e",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "tZwI274oKhBlrCZu",
          "name": "OpenAi account 4"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n  \"assignments\": [\n    {\n      \"id\": \"retailer_name_update\",\n      \"name\": \"Retailer Name\",\n      \"value\": \"={{ $json.message.content['Retailer Name'] || $('Code1').item.json['Retailer Name'] }}\",\n      \"type\": \"string\"\n    },\n    {\n      \"id\": \"contact_person_update\", \n      \"name\": \"Retailer Contact Person\",\n      \"value\": \"={{ $json.message.content['Retailer Contact Person'] || $('Code1').item.json['Retailer Contact Person'] }}\",\n      \"type\": \"string\"\n    },\n    {\n      \"id\": \"retailer_feedback_update\",\n      \"name\": \"message.content['Retailer Feedback']\", \n      \"value\": \"={{ $json.message.content['Retailer Feedback'] || $('Code1').item.json['Retailer Feedback'] }}\",\n      \"type\": \"string\"\n    },\n    {\n      \"id\": \"competitor_feedback_update\",\n      \"name\": \"message.content['Competitor Feedback']\",\n      \"value\": \"={{ $json.message.content['Competitor Feedback'] || $('Code1').item.json['Competitor Feedback'] }}\",\n      \"type\": \"string\"\n    },\n    {\n      \"id\": \"timestamp_preserve\",\n      \"name\": \"message.content['Date&TimeStamp']\",\n      \"value\": \"={{ $('Code1').item.json['Date&TimeStamp'] }}\",\n      \"type\": \"string\"\n    }\n  ],\n  \"includeOtherFields\": true,\n  \"options\": {}\n}",
        "includeOtherFields": "={{ false }}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        3040,
        -320
      ],
      "id": "5cf1bf50-91cd-4394-85d3-d20bf8d740df",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "18fgBU6ef4ZMFU4e3JG1pO9XwdEN4lRBolKLe6HkW7AE",
          "mode": "list",
          "cachedResultName": "SalesBuddy_test 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18fgBU6ef4ZMFU4e3JG1pO9XwdEN4lRBolKLe6HkW7AE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18fgBU6ef4ZMFU4e3JG1pO9XwdEN4lRBolKLe6HkW7AE/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Date&Timestamp": "={{ $json.message.content['Date&TimeStamp'] }}",
            "Retailer Name": "={{ $json.message.content['Retailer Name'] }}",
            "Retailer Contact Person ": "={{ $json.message.content['Retailer Contact Person'] }}",
            "Retailer Feedback": "={{ $json.message.content['Retailer Feedback'] }}",
            "Competitor Feedback": "={{ $json.message.content['Competitor Feedback'] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Date&Timestamp",
              "displayName": "Date&Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Retailer Name",
              "displayName": "Retailer Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Retailer Contact Person ",
              "displayName": "Retailer Contact Person ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Retailer Feedback",
              "displayName": "Retailer Feedback",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Competitor Feedback",
              "displayName": "Competitor Feedback",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "data",
              "displayName": "data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "index",
              "displayName": "index",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logprobs",
              "displayName": "logprobs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "finish_reason",
              "displayName": "finish_reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1800,
        -320
      ],
      "id": "d5bd3f18-761c-40cf-9f1e-1f499688b710",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "j0oORrH64zoTRWWU",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "18fgBU6ef4ZMFU4e3JG1pO9XwdEN4lRBolKLe6HkW7AE",
          "mode": "list",
          "cachedResultName": "SalesBuddy_test 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18fgBU6ef4ZMFU4e3JG1pO9XwdEN4lRBolKLe6HkW7AE/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/18fgBU6ef4ZMFU4e3JG1pO9XwdEN4lRBolKLe6HkW7AE/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Date&Timestamp": "={{ $json.assignments[4].value }}",
            "Retailer Name": "={{ $json.assignments[0].value }}",
            "Retailer Contact Person ": "={{ $json.assignments[1].value }}",
            "Retailer Feedback": "={{ $json.assignments[2].value }}",
            "Competitor Feedback": "={{ $json.assignments[3].value }}"
          },
          "matchingColumns": [
            "Date&Timestamp"
          ],
          "schema": [
            {
              "id": "Date&Timestamp",
              "displayName": "Date&Timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Retailer Name",
              "displayName": "Retailer Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Retailer Contact Person ",
              "displayName": "Retailer Contact Person ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Retailer Feedback",
              "displayName": "Retailer Feedback",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Competitor Feedback",
              "displayName": "Competitor Feedback",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "data",
              "displayName": "data",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "index",
              "displayName": "index",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "message",
              "displayName": "message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "logprobs",
              "displayName": "logprobs",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "finish_reason",
              "displayName": "finish_reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        3260,
        -320
      ],
      "id": "38f4a53b-a054-40af-829f-7679f5f3e654",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "j0oORrH64zoTRWWU",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "fd9c5739-4fba-420a-8cfe-f3131d3837d7",
              "leftValue": "={{ $json.has_missing }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2240,
        -320
      ],
      "id": "c28d7646-aa24-4adf-ad62-206bb882ca2d",
      "name": "If1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c14f078d-c5ec-426e-a15f-725485adfba2",
              "name": "message.content['Date&TimeStamp']",
              "value": "={{ $now.format('dd-MM-yy HH:MM')}}",
              "type": "string"
            },
            {
              "id": "c122594f-0521-4cc0-b58e-a9821795a6a9",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        560,
        -520
      ],
      "id": "351298c5-2c99-4a1e-be26-f39063bae83e",
      "name": "TextFlow_Add_TimeStamp"
    },
    {
      "parameters": {
        "content": "## I'm a note \n**Double click** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)## TO DO\n1. in ai parser - add context of missing fields \n\ncomplete check of mmissing fields entry\n \ndrill down the questions based on goal seek ",
        "height": 180,
        "width": 380,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        2840,
        -720
      ],
      "typeVersion": 1,
      "id": "10e4b06d-a96c-4923-ab6f-180accdc122c",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c14f078d-c5ec-426e-a15f-725485adfba2",
              "name": "message.content['Date&TimeStamp']",
              "value": "={{ $now.format('dd-MM-yy HH:MM')}}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1580,
        -320
      ],
      "id": "ba77b745-9fe6-4fa1-b494-813042e16e29",
      "name": "Voice_TimeStamp"
    }
  ],
  "pinData": {
    "Code1": [
      {
        "json": {
          "Date&TimeStamp": "22-07-25 16:07",
          "Retailer Name": "Anand Appliances",
          "Retailer Contact Person": "",
          "Retailer Feedback": "There is a problem of discounts here.",
          "Competitor Feedback": "",
          "missing_fields": [
            "Retailer Contact Person",
            "Competitor Feedback"
          ],
          "request": "Could you please provide the Retailer Contact Person and Competitor Feedback?",
          "has_missing": true
        }
      }
    ],
    "Send message and wait for response": [
      {
        "json": {
          "data": {
            "text": "Mahindra and schemes are very good from Raj appliances"
          }
        }
      }
    ],
    "Edit Fields2": [
      {
        "json": {
          "assignments": [
            {
              "id": "retailer_name_update",
              "name": "Retailer Name",
              "value": "=Raj appliances",
              "type": "string"
            },
            {
              "id": "contact_person_update",
              "name": "Retailer Contact Person",
              "value": "=",
              "type": "string"
            },
            {
              "id": "retailer_feedback_update",
              "name": "message.content['Retailer Feedback']",
              "value": "=Mahindra and schemes are very good",
              "type": "string"
            },
            {
              "id": "competitor_feedback_update",
              "name": "message.content['Competitor Feedback']",
              "value": "=",
              "type": "string"
            },
            {
              "id": "timestamp_preserve",
              "name": "message.content['Date&TimeStamp']",
              "value": "=22-07-25 16:07",
              "type": "string"
            }
          ],
          "includeOtherFields": true,
          "options": {}
        }
      }
    ]
  },
  "connections": {
    "OpenAI": {
      "main": [
        [
          {
            "node": "Translate a language",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Voice_TimeStamp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "OpenAI2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI2": {
      "main": [
        [
          {
            "node": "TextFlow_Add_TimeStamp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        []
      ]
    },
    "Translate a language": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI4": {
      "main": [
        []
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message and wait for response": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Send message and wait for response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TextFlow_Add_TimeStamp": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Voice_TimeStamp": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "c74d71b7-ccb4-475b-b9ad-d81f170c1024",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "39e9c01a2593b60176cdd2d00be53f2e0050f53645e1b6f9eb05581d48e18abf"
  },
  "id": "lk84bUjipN7j6ADj",
  "tags": []
}